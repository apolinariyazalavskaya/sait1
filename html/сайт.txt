<html>

<head>
    <title> Зачем нужен кодстайл в веб-вёрстке </title>
</head>

<body>

    <h1>Зачем нужен кодстайл в веб-вёрстке</h1>
    <p>
        Представьте, что к вам подошел иностранец и задал вопрос. Скажем, про <i>тонкий
            зелёный длинный маленький</i> предмет. Первая мысль, которая приходит в голову: все
        слова знакомы, но с описанием предмета что-то не так. Интуитивно хочется расставить
        эти прилагательные по-другому (например, маленький зелёный тонкий длинный). Это
        называется порядком <b>однородных</b> определений.
    </p>
    <p>
        Как и прилагательные в речи, CSS-свойства в коде также могут выглядеть не на своём
        месте, если их не выстроить в нужном порядке. Порядок свойств позволит
        программистам, работающим над одним проектом, <b>понимать</b> чужой код и правильно
        оформлять свой. Осталось договориться о том, как располагать свойства, чтобы не
        казаться друг другу иностранцами.
    </p>
    Для такой цели и был придуман <b>кодстайл</b> (набор правил и соглашений, используемых
    при написании исходного кода на некотором языке программирования).
    <p>
        <mark><q>Исходный код - это ответственность, а не актив!</q> - <cite>Эрик Ли</cite></mark>
    </p>
    <p>
        У многих крупных компаний, таких как <a
            href="https://yandex.ru/promo/browser/brand/s/040?from=direct_serp&utm_source=yandex&utm_medium=search&utm_campaign=search_brand_main|78770231&utm_content=5039753714|12821757164&utm_term=%D1%8F%D0%BD%D0%B4%D0%B5%D0%BA%D1%81&_openstat=ZGlyZWN0LnlhbmRleC5ydTs3ODc3MDIzMTsxMjgyMTc1NzE2NDt5YW5kZXgucnU6cHJlbWl1bQ&yclid=16718981468110192639"
            target="_blank">Яндекс</a>,
        <a href="https://www.google.ru/" target="_blank">Google</a>, рекомендации по оформлению
        кода опубликованы и доступны всем желающим. В фирмах поменьше могут быть
        внутренние инструкции, иногда единый стиль кода оговаривается устно (бывает и
        такое).
    </p>
    <p>
        Наш курс по веб-вёрстке - не исключение, в нём также есть правила оформления. Он
        делится на три части, о которых ниже</p>
    <p><a href="page.html"><img src="C:\Users\apoli\OneDrive\Рабочий стол\учеба\html\hb.png"
                alt="Как выглядит наш сайт кодстайла" border="1" cellspacing="0" cellpading="1"></a></p>
    <h2>HTML</h2>
    <p>Первая из частей - HTML. Это начальная стадия соблюдения кодстайла, ведь любой
        сайт вы начинаете писать именно с этого языка. Давайте посмотрим на основные
        правила:</p>
    <ul>
        <li>Теги и их атрибуты пишутся строчными буквами.</li>
        <li>Для значений атрибутов всегда используются двойные кавычки.</li>
        <li>Для отступов у вложенных элементов используется табуляция (рекомендуется
            выставлять размер табуляции - 2).</li>
        <li>Используйте в качестве основного селектора class</li>
        <li>Закрывающий слеш у одиночных тегов (‹img›, ‹br› и другие) не ставится.</li>
    </ul>
    <p>Это лишь выжимка основного из всех правил, обязательно ознакомьтесь со всеми
        правилами и применяйте их.</p>
    <h2>CSS</h2>
    <p>В CSS правил больше, потому что синтаксис там посложнее. Одно из важных, которое
        действительно поможет вам сохранить ваш код в идеальном виде - порядок свойств.
        Давайте посмотрим, как это выглядит</p>
    <p>Порядок написания CSS-свойств</p>
    <table border="1" cellspacing="0" cellpading="1">
        <thead>
            <tr>
                <th>Порядок</th>
                <th> Группа свойств</th>
                <th>Используемые свойства</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>1</td>
                <td>Позиционирование</td>
                <td>position: relative;
                    <p>left: 0;</p>
                    <p>right: 0;</p>
                    <p>top: 0;</p>
                    <p>bottom: 0;</p>
                </td>
            </tr>
            <tr>
                <td>2</td>
                <td>Блочная модель</td>
                <td>display: flex;
                    <p>align-items: center;</p>
                    <p>margin: 10px;</p>
                    <p>padding: 10px 20px;</p>
                    <p>border: 1px solid red;</p>
                    <p>width: 200px;</p>
                    <p>height: 100px;</p>
                    <p>box-sizing: border-box;</p>
                </td>
            </tr>
            <tr>
                <td>3</td>
                <td>Типографика</td>
                <td>font-family: Arial;
                    <p>font-size: 25px;</p>
                    <p>font-style: italic;</p>
                    <p>text-decoration: none;</p>
                    <p>color: red;</p>
                </td>
            </tr>
            <tr>
                <td>4</td>
                <td>Оформление</td>
                <td>background: red;
                    <p>opacity: 1;</p>
            </tr>
            <tr>
                <td>5</td>
                <td>Анимации</td>
                <td>transform: translateX(5px);
                    <p>animation: shake 0.3s infinite;</p>
            </tr>
        </tbody>
    </table>
    <h2>JS</h2>
    <ol>
        <li>В массивах первое и последнее значения не отделяется пробелом, после каждой
            запятой необходимо ставить пробел.</li>
        <li>В однострочных объектах и при деструктуризации фигурные скобки не должны
            отделяться пробелами от содержимого.</li>
        <li>Запрещено объявлять переменные, имена которых совпадают с именами
            используемых в коде лейблов, а так же ключевыми словами, которые
            используются самим Javascript.</li>
    </ol>
    <p>Ну а полный кодстайл вы можете (и очень рекомендуется) изучить по
        <a href="https://codeguide.maxgraph.ru/" target="_blank">ссылке</a>
    </p>
</body>

</html>